#!/bin/bash

set -eo pipefail

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
envd=$(cd "$3/" && pwd)

cd /tmp
curl --fail -sO https://storage.googleapis.com/golang/go1.3.1.linux-amd64.tar.gz
tar zxf go1.3.1.linux-amd64.tar.gz
rm go1.3.1.linux-amd64.tar.gz

export GOROOT=/tmp/go
export GOPATH=$build/.heroku/g
export PATH=$GOROOT/bin:$PATH

cd "$build"

# so gitVersion() doesn't get called
echo "heroku" > VERSION

go run make.go -v

mkdir -p .config/camlistore
cat > .config/camlistore/server-config.json <<'EOF'
{
    "auth": "userpass:alice:secret",
    "identity": ["_env", "${CAMLI_CONFIG_KEYID}"],
    "s3": ["_env", "${CAMLI_CONFIG_S3}"],
    "postgres": ["_env", "${CAMLI_CONFIG_POSTGRES}"],
    "dbname": ["_env", "${CAMLI_CONFIG_DBNAME}"]
}
EOF

gpg --no-default-keyring --secret-keyring="$build/.config/camlistore/identity-secring.gpg" --import "$envd/CAMLI_GPG_SECRET_KEY"
CAMLI_CONFIG_KEYID="$(gpg --no-default-keyring --secret-keyring=$build/.config/camlistore/identity-secring.gpg -K | egrep '^sec' | awk '{ print $2 }' | cut -d'/' -f2)"

mkdir -p .profile.d
cat > .profile.d/camlistore.sh <<EOF
export PATH="\$HOME/bin:\$PATH"
export CAMLI_CONFIG_KEYID="$CAMLI_CONFIG_KEYID"
export CAMLI_CONFIG_POSTGRES="\$(ruby -r uri -e 'u = URI.parse(ENV['\''DATABASE_URL'\'']); puts "#{u.user}@#{u.host}:#{u.password}"')"
export CAMLI_CONFIG_DBNAME="\$(ruby -r uri -e 'u = URI.parse(ENV['\''DATABASE_URL'\'']); puts u.path[1..-1]')"
EOF

echo 'web: camlistored -listen=":$PORT" -openbrowser=false' > Procfile
